arguments: C:/Users/hault/Desktop/Emloyee_Record_Magament_System/facerecognition/align_dataset_mtcnn.py C:/Users/hault/Desktop/Emloyee_Record_Magament_System/static/data_process/raw/ C:/Users/hault/Desktop/Emloyee_Record_Magament_System/static/data_process/process/ C:/Users/hault/Desktop/Emloyee_Record_Magament_System/static/align --image_size 160 --margin 32 --random_order --gpu_memory_fraction 0.25
--------------------
tensorflow version: 2.11.0
--------------------
git hash: b'ac2996eb774ab54157645884fba448106d9b56f1'
--------------------
b'diff --git a/db.sqlite3 b/db.sqlite3\nindex befc270..f6990b3 100644\nBinary files a/db.sqlite3 and b/db.sqlite3 differ\ndiff --git a/employee/templates/index.html b/employee/templates/index.html\nindex 74d5e2f..1094d76 100644\n--- a/employee/templates/index.html\n+++ b/employee/templates/index.html\n@@ -14,7 +14,7 @@\n   #camera-image {\n     width: 200%;\n     /* \xc4\x90\xe1\xba\xb7t chi\xe1\xbb\x81u r\xe1\xbb\x99ng khung camera */\n-    height: 350px;\n+    height: 400px;\n     /* \xc4\x90\xe1\xba\xb7t chi\xe1\xbb\x81u cao khung camera */\n     border: none;\n     /* X\xc3\xb3a \xc4\x91\xc6\xb0\xe1\xbb\x9dng vi\xe1\xbb\x81n khung camera */\n@@ -110,25 +110,31 @@\n \n <script type="text/javascript">\n \n-  //l\xe1\xba\xa5y s\xe1\xbb\xb1 ki\xe1\xbb\x87n r\xe1\xbb\x9di trang v\xc3\xa0 load l\xe1\xba\xa1i trang\n-  window.onbeforeunload = function () {\n-    //x\xc3\xa9t th\xe1\xba\xbb v\xe1\xbb\x9bi id image-camera c\xc3\xb3 load \xc4\x91\xc6\xb0\xe1\xbb\xa3c hay kh\xc3\xb4ng\n-    if (document.getElementById(\'camera-image\').contentWindow.location != \'about:blank\') {\n-      //n\xe1\xba\xbfu c\xc3\xb3 load \xc4\x91\xc6\xb0\xe1\xbb\xa3c th\xc3\xac g\xe1\xbb\xadi y\xc3\xaau c\xe1\xba\xa7u stop\n-      var xhr = new XMLHttpRequest();\n-      var csrftoken = getCookie(\'csrftoken\'); // Retrieve the CSRF token from the cookie\n-      xhr.open(\'POST\', "{% url \'identified\' %}", true);\n-      xhr.setRequestHeader(\'X-CSRFToken\', csrftoken); // Set the CSRF token in the request header\n-      xhr.send();\n-    }\n+  // L\xe1\xba\xafng nghe s\xe1\xbb\xb1 ki\xe1\xbb\x87n chuy\xe1\xbb\x83n trang\n+  window.addEventListener(\'beforeunload\', function (e) {\n+    // H\xe1\xbb\xa7y b\xe1\xbb\x8f s\xe1\xbb\xb1 ki\xe1\xbb\x87n m\xe1\xba\xb7c \xc4\x91\xe1\xbb\x8bnh\n+    e.preventDefault();\n+\n+    // G\xe1\xbb\xadi y\xc3\xaau c\xe1\xba\xa7u POST \xc4\x91\xe1\xba\xbfn trang /stop\n     var xhr = new XMLHttpRequest();\n-    var csrftoken = getCookie(\'csrftoken\'); // Retrieve the CSRF token from the cookie\n-    xhr.open(\'POST\', "{% url \'identified\' %}", true);\n-    xhr.setRequestHeader(\'X-CSRFToken\', csrftoken); // Set the CSRF token in the request header\n-    xhr.send();\n+    var csrftoken = getCookie(\'csrftoken\');\n \n-  };\n+    xhr.onreadystatechange = function () {\n+      if (xhr.readyState === XMLHttpRequest.DONE) {\n+        if (xhr.status === 200) {\n+          // X\xe1\xbb\xad l\xc3\xbd khi nh\xe1\xba\xadn \xc4\x91\xc6\xb0\xe1\xbb\xa3c ph\xe1\xba\xa3n h\xe1\xbb\x93i th\xc3\xa0nh c\xc3\xb4ng\n+          console.log(xhr.responseText);\n+        } else {\n+          // X\xe1\xbb\xad l\xc3\xbd khi c\xc3\xb3 l\xe1\xbb\x97i x\xe1\xba\xa3y ra\n+          console.error(\'C\xc3\xb3 l\xe1\xbb\x97i x\xe1\xba\xa3y ra: \' + xhr.status);\n+        }\n+      }\n+    };\n \n+    xhr.open(\'POST\', "{% url \'identified\' %}", true);\n+    xhr.setRequestHeader(\'X-CSRFToken\', csrftoken);\n+    xhr.send();\n+  });\n \n   document.getElementById(\'btn\').addEventListener(\'click\', function () {\n     var xhr = new XMLHttpRequest();\ndiff --git a/employee/views.py b/employee/views.py\nindex 73bcc4b..3967ee0 100644\n--- a/employee/views.py\n+++ b/employee/views.py\n@@ -8,6 +8,8 @@ from django.urls import reverse\n import os\n import shutil\n from django.http import JsonResponse, HttpResponseRedirect\n+import qrcode\n+\n \n # Create your views here.\n \n@@ -41,7 +43,26 @@ def timetrain(request):\n     # G\xe1\xbb\xadi train_datetimes \xc4\x91\xe1\xba\xbfn template d\xc6\xb0\xe1\xbb\x9bi d\xe1\xba\xa1ng JSON\n     data = {\'train_datetimes\': train_datetimes}\n     return JsonResponse(data)\n-\n+#h\xc3\xa0m t\xe1\xba\xa1o qr code\n+def create_qrcode(text):\n+    # T\xe1\xba\xa1o \xc4\x91\xe1\xbb\x91i t\xc6\xb0\xe1\xbb\xa3ng QR code\n+    qr = qrcode.QRCode(\n+        version=1,\n+        error_correction=qrcode.constants.ERROR_CORRECT_L,\n+        box_size=10,\n+        border=4,\n+    )\n+\n+    # Th\xc3\xaam d\xe1\xbb\xaf li\xe1\xbb\x87u v\xc3\xa0o QR code\n+    path = os.getcwd()\n+    qr.add_data(text)\n+    qr.make(fit=True)\n+\n+    # T\xe1\xba\xa1o \xe1\xba\xa3nh QR code t\xe1\xbb\xab \xc4\x91\xe1\xbb\x91i t\xc6\xb0\xe1\xbb\xa3ng QR code\n+    qr_image = qr.make_image(fill_color="black", back_color="white")\n+\n+    # L\xc6\xb0u \xe1\xba\xa3nh QR code th\xc3\xa0nh file path + /static/images/qrcode/<text>.png\n+    qr_image.save(os.path.join(path, \'static/images/qrcode\', f\'{text}.png\'))\n \n def create_folder(request):\n     folder_name = request.GET.get(\'name\')\n@@ -214,6 +235,8 @@ def profile(request):\n         try:\n             employee.save()\n             employee.user.save()\n+            #t\xe1\xba\xa1o m\xc3\xa3 qr v\xe1\xbb\x9bi m\xc3\xa3 nh\xc3\xa2n vi\xc3\xaan\n+            create_qrcode(str(ec))\n             error = "no"\n         except:\n             error = "yes"\ndiff --git a/facerecognition/utils.py b/facerecognition/utils.py\nindex 6dc39c1..483520b 100644\n--- a/facerecognition/utils.py\n+++ b/facerecognition/utils.py\n@@ -144,15 +144,15 @@ def face_detection(request):\n                 elif faces_found > 0:\n                     x1, y1, x2, y2 = face[:4]\n                     count += 1\n-                    # Get face image\n-                    face_img = rgb[int(y1):int(y2), int(x1):int(x2), :]\n-\n+                    # # Get face image\n+                    # face_img = rgb[int(y1):int(y2), int(x1):int(x2), :]\n+                    time.sleep(2)\n                     folder_path = os.path.join(currentPythonFilePath, \'static\', \'data\', folder_name)\n                     if not os.path.exists(folder_path):\n                         os.makedirs(folder_path)\n \n                     image_path = os.path.join(folder_path, folder_name + str(count) + \'.jpg\')\n-                    cv2.imwrite(image_path, face_img)\n+                    cv2.imwrite(image_path, rgb)\n                     #draw bbox\n                     cv2.rectangle(rgb, (int(x1), int(y1)), (int(x2), int(y2)), (0, 255, 0), 2)\n                     cv2.imshow(\'Phat Hien Khuon Mat\', rgb)\n@@ -297,7 +297,6 @@ class Camera_feed_identified(object):\n     def get_frame(self):\n         image = self.frame\n         #chuy\xe1\xbb\x83n v\xe1\xbb\x81 m\xc3\xa0u RGB\n-        image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n         _, jpeg = cv2.imencode(\'.jpg\', image)\n         return jpeg.tobytes()\n \n@@ -327,7 +326,8 @@ class Camera_feed_identified(object):\n                     embeddings = detector.get_embeddings(face_img)\n                     \n                     # Recognize face\n-                    name, prob = recognizer.recognize_face(embeddings) \n+                    name, prob = recognizer.recognize_face(embeddings)\n+                     \n                     # Draw rectangle and name\n                     cv2.rectangle(frame, (int(x1), int(y1)), (int(x2), int(y2)), (0, 255, 0), 2)\n                     cv2.putText(frame, "{} {:.2f}".format(name, prob), (int(x1), int(y1) - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)\n@@ -337,7 +337,7 @@ class Camera_feed_identified(object):\n             except:\n                 try:\n                     grabbed, frame = self.video.read()\n-                    self.frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)\n+                    self.frame = frame\n                     self.grabbed = grabbed\n                 except:\n                     pass\n@@ -347,6 +347,7 @@ class Camera_feed_identified(object):\n def Gender_frame(camera):\n     while True:\n         try:\n+\n             frame = camera.get_frame()\n         \n             yield (b\'--frame\\r\\n\'\ndiff --git a/facerecognition/views.py b/facerecognition/views.py\nindex e4085f4..b372e8f 100644\n--- a/facerecognition/views.py\n+++ b/facerecognition/views.py\n@@ -11,24 +11,18 @@ def demorecognition(request):\n \n def identified(request):\n     try:\n-        print(request.method)\n-        print("threadding 1")\n         cam=Camera_feed_identified()\n         gen = Gender_frame(cam)\n-        print("threadding 2")\n         if request.method == \'GET\':\n-            print("threadding 3")\n             try:\n                 return StreamingHttpResponse(gen, content_type="multipart/x-mixed-replace;boundary=frame")\n             except:\n                 pass\n-            print("threadding 4")\n         elif request.method == \'POST\':\n-            print("threadding 5")\n-            print("threadding",threading.active_count())\n             if threading.active_count() > 0:\n-                gen.close()\n                 cam.stop()\n+                time.sleep(0.2)\n+                gen.close()\n                 messages.success(request, "D\xe1\xbb\xabng th\xc3\xa0nh c\xc3\xb4ng.")\n                 return HttpResponse("success")\n             else:\ndiff --git a/requirements.txt b/requirements.txt\nindex 0883720..5f49df6 100644\nBinary files a/requirements.txt and b/requirements.txt differ\ndiff --git a/time.txt b/time.txt\nindex acba2d6..d41a81b 100644\n--- a/time.txt\n+++ b/time.txt\n@@ -1 +1 @@\n-Th\xe1\xbb\x9di gian train ho\xc3\xa0n th\xc3\xa0nh v\xc3\xa0o ng\xc3\xa0y: 30/05/2023 20:35\n+Th\xe1\xbb\x9di gian train ho\xc3\xa0n th\xc3\xa0nh v\xc3\xa0o ng\xc3\xa0y: 01/06/2023 22:52'